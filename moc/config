# This is a configuration file for the MOC player.  It should be named
# 'config' and placed in the ~/.moc directory.  As this file can specify
# commands which invoke other applications, MOC will refuse to start if it
# is not owned by either root or the current user, or if it is writable by
# anyone other than its owner.

# Comments begin with '#'.  All options are given with their default
# values, and therefore commented.  If you change the value from the
# default you must uncomment the line to have the new value take effect.
#
# You can use quotes and escape ('\') in parameters.
#
# You can have variable values substituted by enclosing the variable name
# as "${...}".  (This only applies to the portion of the option following
# the '='.)  Variables are substituted first from the environment then,
# if not found, from the configuration options.  (Note that the value of
# a configuration option substituted is that which it has at the time the
# substitution variable is encountered.)  If there is a naming conflict
# between an environment and configuration variable, you may be able to
# resolve it by using lowercase as the environment variable matches are
# case-sensitive whereas the configuration variables are not.
#
# You can also use the form "${...:-...}" where the value in the second
# position will be substituted if the variable name given in the first
# position is unset or null.
#
# So, for example:
#
#     MusicDir = /music/${USER:-public}
#     Fastdir1 = ${MusicDir}/mp3/rock
#
# Variable names are limited to those accepted by the BASH shell; that
# is, those comprising the upper- and lowercase ASCII characters, digits
# and the underscore.
#
# If you need to use the "${" sequence for any other purpose, write "$${"
# and it will be replaced by "${" and not treated as a substitution.
#
# Some options take lists of strings as their values.  The strings are
# separated by colons.  Additional strings can be appended to the list
# using "+=" in place of a plain "=" to assign the value.  For an example,
# see the XTerms option.
#
# You can override any configuration option when you run MOC using the
# '-O' command line option:
#
#     mocp -O AutoNext=no -O messagelingertime=1 -O XTerms+=xxt:xwt
#
# This command line option can be repeated as many times as needed and
# the configuration option name is not case sensitive.  (Note that MOC
# does not perform variable substitution on the value of such overridden
# configuration options.)  Most option values are set before the
# configuration file is processed (which allows the new values to be
# picked up by substitutions), however list-valued options are overridden
# afterwards (which gives the choice of whether the configured values are
# replaced or added to).

# Remember that the client and server are separate processes and the
# server will retain the configuration values formed from the environment
# within which it was originally started.

# Show file titles (title, author, album) instead of file names?
#ReadTags = yes

MusicDir = ${HOME}/Music
StartInMusicDir = yes

Repeat = yes
Shuffle = yes
AutoNext = yes

# Default FormatString:
#
#   %n - Track number
#   %a - Artist
#   %A - Album
#   %t - Title
#   %(X:TRUE:FALSE) - Ternary expression: if X exists, do TRUE,
#                     otherwise FALSE.  The escape character must
#                     be doubled (i.e., '\\').  (See zshmisc
#                     documentation for more information.)
#
#FormatString = "%(n:%n :)%(a:%a - :)%(t:%t:)%(A: \(%A\):)"

# Sound driver - OSS, ALSA, JACK, SNDIO (on OpenBSD) or null (only for
# debugging).  You can enter more than one driver as a colon-separated
# list.  The first working driver will be used.
#SoundDriver = @SOUNDDRIVER@
SoundDriver=ALSA
#ShowHiddenFiles = no
#HideFileExtension = no

# Show file format in menu?
#ShowFormat = yes

# Show file time in menu?  Possible values: 'yes', 'no' and 'IfAvailable'
#ShowTime = IfAvailable

# Show time played as a percentage in the time progress bar.
#ShowTimePercent = no

Theme = nightly_theme

#AutoLoadLyrics = yes

#MOCDir = ~/.moc

# Use MIME to identify audio files.  This can make for slower loading
# of playlists but is more accurate than using "extensions".
#UseMimeMagic = no

# Enable the conversion of filenames from the local encoding to UTF-8.
#FileNamesIconv = no

# Enable the conversion of the xterm title from UTF-8 to the local encoding.
#NonUTFXterm = no

# Should MOC precache files to assist gapless playback?
#Precache = yes

# Remember the playlist after exit?
#SavePlaylist = yes

# When using more than one client (interface) at a time, do they share
# the playlist?
#SyncPlaylist = yes

# Choose a keymap file (relative to '~/.moc/' or using an absolute path).
# An annotated example keymap file is included ('keymap.example').
#
# Example:    Keymap = my_keymap
#
Keymap = vim_keymap

# FastDirs, these allow you to jump directly to a directory, the key
# bindings are in the keymap file.
#Fastdir1 =
#Fastdir2 =

#SeekTime = 1
#SilentSeekTime = 5

#PreferredDecoders  = aac(aac,ffmpeg):m4a(ffmpeg)
#PreferredDecoders += mpc(musepack,*,ffmpeg):mpc8(musepack,*,ffmpeg)
#PreferredDecoders += sid(sidplay2):mus(sidplay2)
#PreferredDecoders += wav(sndfile,*,ffmpeg)
#PreferredDecoders += wv(wavpack,*,ffmpeg)
#PreferredDecoders += audio/aac(aac):audio/aacp(aac):audio/m4a(ffmpeg)
#PreferredDecoders += audio/wav(sndfile,*)
#PreferredDecoders += ogg(vorbis,*,ffmpeg):oga(vorbis,*,ffmpeg):ogv(ffmpeg)
#PreferredDecoders += application/ogg(vorbis):audio/ogg(vorbis)
#PreferredDecoders += flac(flac,*,ffmpeg)
#PreferredDecoders += opus(ffmpeg)
#PreferredDecoders += spx(speex)


#ForceSampleRate = 0

# This is disabled by default because there were reports that it prevents
# MP3 files from playing on some soundcards.
#Allow24bitOutput = no

# Number items in the playlist.
#PlaylistNumbering = yes

# Main window layouts can be configured.  You can change the position and
# size of the menus (directory and playlist)
#Layout1 = directory(0,0,50%,100%):playlist(50%,0,FILL,100%)
#Layout2 = directory(0,0,100%,100%):playlist(0,0,100%,100%)
#Layout3 = ""

# When the song changes, should the menu be scrolled so that the currently
# played file is visible?
#FollowPlayedFile = yes

#CanStartInPlaylist = yes

# Executing external commands (1 - 10) invoked with key commands (F1 - F10
# by default).
#ExecCommand1 =
#ExecCommand2 =
#ExecCommand3 =

# Set the terminal title when running under xterm.
#SetXtermTitle = yes

#SetScreenTitle = yes

# Display full paths instead of just file names in the playlist.
PlaylistFullPaths = no

# The following setting describes how block markers are displayed in
# the play time progress bar.  Its value is a string of exactly three
# characters.  The first character is displayed in a position which
# corresponds to the time marked as the start of a block and the last
# character to the time marked as the end of the block.  The middle
# character is displayed instead if both the start and the end of the block
# would fall in the same position (within the resolution of the interface).
# You can turn off the displaying of these block marker positions by using
# three space characters.
#BlockDecorators = "`\"'"

# How long (in seconds) to leave a message displayed on the screen.
#MessageLingerTime = 3

# Does MOC display a prefix on delayed messages indicating
# the number of queued messages still to be displayed?
#PrefixQueuedMessages = yes

# String to append to the queued message count if any
# error messages are still waiting to be displayed.
#ErrorMessagesQueued = "!"

# Self-describing ModPlug options (with 'yes' or 'no' values).
#ModPlug_Oversampling = yes
#ModPlug_NoiseReduction = yes
#ModPlug_Reverb = no
#ModPlug_MegaBass = no
#ModPlug_Surround = no
#ModPlug_ResamplingMode = FIR
#ModPlug_Channels = 2               # 1 or 2 channels
#ModPlug_Bits = 16                  # 8, 16 or 32 bits
#ModPlug_Frequency = 44100          # 11025, 22050, 44100 or 48000 Hz
#ModPlug_ReverbDepth = 0            # 0 (quiet) to 100 (loud)
#ModPlug_ReverbDelay = 0            # Delay in ms (usually 40-200ms)
#ModPlug_BassAmount = 0             # 0 (quiet) to 100 (loud).
#ModPlug_BassRange = 10             # Cutoff in Hz (10-100).
#ModPlug_SurroundDepth = 0          # Surround level 0(quiet)-100(heavy).
#ModPlug_SurroundDelay = 0          # Surround delay in ms, usually 5-40ms.
#ModPlug_LoopCount = 0              # 0 (never), n (times) or -1 (forever)
#TiMidity_Rate = 44100              # Between 8000 and 48000
#TiMidity_Bits = 16                 # 8 or 16
#TiMidity_Channels = 2              # 1 or 2
#TiMidity_Volume = 100              # 0 to 800

#TiMidity_Config =

# SidPlay2 playback Mode:
#
#     "M": Mono (best for many SIDs)
#     "S": Stereo
#     "L"/"R": Left / Right
#
#SidPlay2_PlayMode = "M"

# Use start-song information from SID ('yes') or start at first song
# ('no').  Songs before the start-song won't be played.
#SidPlay2_StartAtStart = yes

# Play sub-tunes.
#SidPlay2_PlaySubTunes = yes

# Run the OnSongChange command when a new song starts playing.
# Specify the full path (i.e. no leading '~') of an executable to run.
# Arguments will be passed, and you can use the following escapes:
#
#     %a artist
#     %r album
#     %f filename
#     %t title
#     %n track
#     %d file duration in XX:YY form
#     %D file duration, number of seconds
#
# No pipes/redirects can be used directly, but writing a shell script
# can do the job.
#
# Example:    OnSongChange = "/home/jack/.moc/myscript %a %r"
#
OnSongChange = "${HOME}/.moc/OnStart.sh %f"

# If RepeatSongChange is 'yes' then MOC will execute the command every time
# a song starts playing regardless of whether or not it is just repeating.
# Otherwise the command will only be executed when a different song is
# started.
#RepeatSongChange = no

# Run the OnStop command (full path, no arguments) when MOC changes state
# to stopped (i.e., when user stopped playing or changes a song).
#
# Example:    OnStop = "/home/jack/.moc/myscript_on_stop"
#
# OnStop = "${HOME}/.moc/song_stop.sh"


# Run the OnServerStart or OnServerStop commands (full path, no arguments)
# when MOC server is started or terminated respectively.  The server will
# not wait for the commands to complete before continuing.
#OnServerStart =
#OnServerStop =

#QueueNextSongReturn = yes
